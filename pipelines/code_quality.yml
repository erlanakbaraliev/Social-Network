trigger:
- none

pr:
- main

pool:
  vmImage: 'ubuntu-latest'

stages:
# ------------------------------------
# |         Code Quality             |
# ------------------------------------
- stage: CodeQuality
  displayName: 'Code Quality'
  jobs:
  # -----------------------------------
  #|       Tests and Coverage          |
  # -----------------------------------
  - job: UnitTests
    displayName: 'Unit Tests'
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.13'
      displayName: 'Using python3.13'
    
    - script: |
        python3 -m pip install --upgrade pip
        pip install -r requirements.txt -r requirements-dev.txt
      displayName: 'Installing pre-requisites'
    
    - script: |
        export DB_ENV='sqlite'
        coverage run manage.py test -b
      displayName: 'Running Tests'
    
    # Generating .xml file for PublishCodeCoverageResults task
    - script: |
        coverage xml
      displayName: 'Generating a coverage artifact'

    - task: UseDotNet@2
      inputs:
        workingDirectory: '$(System.DefaultWorkingDirectory)'
    
    - task: PublishCodeCoverageResults@2
      inputs:
        summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.xml'

    - task: PublishTestResults@2
      condition: succeededOrFailed()
      inputs:
        testResultsFiles: '**/coverage*.xml'
        testRunTitle: 'Publish test results for Python $(python.version)'
  # ------------------------------------
  #|       Pylint and Pycodestyle       |
  # ------------------------------------
  - job: PylintAndPycodestyle
    displayName: Pylint and Pycodestyle
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.13'
        architecture: 'x64'
    
    - script: |
        python3 -m pip install --upgrade pip
        pip install -r requirements.txt -r requirements-dev.txt
      displayName: 'Install pre-requisites'
    
    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: |
          ./run_linters.sh && echo "All checks have passed" || (cat build/linters_summary; exit 1)
        workingDirectory: '$(System.DefaultWorkingDirectory)/utils'
      displayName: 'Run linters'

